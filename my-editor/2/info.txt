iv rules: hp / 2 + Str + Spr + Def + Spd = 40
ev rules: hp / 2 + Str + Spr + Def + Spd <= 20


yokai offset = 20744

00 - 01:
num1
02 - 03:
num2
04 - 07:
yokaiid
08 - 32:
nickname (08 == 0 if no nickname)

33:
0
34:
0
35 - 37:
something
38:
0
39:
0
40:
60
41:
0

42:
attack stat

43:
8
44:
73
45:
0

46:
technique stat

47:
8
48:
16
49:
0

50:
soultimate stat

51:
8

52 - 55:
xp

56:
134
57:
0
58:
90
59:
0

60 - 63:
ownerid
64 - 78:
stats
79:
level

80:
win poses unlocked 
81:
3
82:
1
83:
0

84:
loaflevel and attitude

85:
8
86:
132
87:
8
88:
159
89:
0
90:
129
91:
0

TODO missing items held, current hp, jibanyan soultimate??



item offset: the universal offset!

00: num1
01: 00
02: num2
03
04-07: item
08-11: amount

equipment offset: universal offset + 5172

00: num1
01: 10
02: num2
03
04-07: equipment
08-11: amount
12-15: amount in use

important offset: universal offset + 6624

00: num1
01: 20
02: num2
04-07: important (what it is aka id)

soul offset: universal offset + 8076

00: num1
01: 30
02: num2
03
04-7: soul
08-09: xp
10: soul level
11: used or not used

useful unsorted info:


    if (this->getMgr()->getFlags() & GameConfig::GameTypeFlags::IS_SHINNUCHI) {
        this->seen->setOffset(0x408);
        this->befriended->setOffset(0x448);
        this->youkaiCam->setOffset(0x4C8);
        ui->befriendedGB->setTitle(tr("BEFRIENDED"));
        ui->youkaiCamGB->setTitle(tr("YO-KAI_CAM"));
    } else {
        this->seen->setOffset(0x400);
        this->befriended->setOffset(0x440);
        this->youkaiCam->setOffset(0x5EC);
        ui->befriendedGB->setTitle(tr("BEFRIENDED_BS"));
        ui->youkaiCamGB->setTitle(tr("BEFRIENDED_FS"));
    }

    static const int YoukaiCountMax = 406;
    static const int ItemCountMax = 430;
    static const int EquipmentCountMax = 90;
    static const int ImportantCountMax = 180;
    static const int SoulCountMax = 100;


this->writeCurrentItem();
qsrand(QTime::currentTime().msec());
for (int i = 0; i < this->getItemsCount(); ++i) {
    quint32 youkaiId = this->read<quint32>(0x04 + 0x5C * i);
    if (form->youkaiCB->findData(youkaiId) >= 0) {
        quint8 iv_Sum = 0;
        quint8 iv_hp = this->read<quint8>(0x40 + 0x5C * i);
        quint8 iv_str = this->read<quint8>(0x41 + 0x5C * i);
        quint8 iv_spr = this->read<quint8>(0x42 + 0x5C * i);
        quint8 iv_def = this->read<quint8>(0x43 + 0x5C * i);
        quint8 iv_spd = this->read<quint8>(0x44 + 0x5C * i);
        iv_Sum = iv_hp / 2 + iv_str + iv_spr + iv_def + iv_spd;
        int ivs[5] = {};
        if (iv_hp % 2 != 0 || iv_Sum != 40) {
            for (int j = 0; j < 40; ++j) {
                ivs[qrand() % 5]++;
            }
        } else {
            continue;
        }
        this->write<quint8>(ivs[0] * 2, 0x40 + 0x5C * i); // iv_hp
        this->write<quint8>(ivs[1], 0x41 + 0x5C * i); // iv_str
        this->write<quint8>(ivs[2], 0x42 + 0x5C * i); // iv_spr
        this->write<quint8>(ivs[3], 0x43 + 0x5C * i); // iv_def
        this->write<quint8>(ivs[4], 0x44 + 0x5C * i); // iv_spd

void SaveManager::updateFlags()
{
    this->flags = 0;
    if (this->readSection<quint8>(0, 242) == 4) {
        this->flags = GameConfig::GameTypeFlags::IS_SHINNUCHI | GameConfig::GameTypeFlags::PREFFER_SJIS;
        return;
    }
    if (this->getSectionData(11).size() == 0x1394) {
        this->flags = GameConfig::GameTypeFlags::PREFFER_SJIS;
        return;
    }
    return;
}